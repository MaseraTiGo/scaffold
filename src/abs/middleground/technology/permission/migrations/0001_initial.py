# Generated by Django 3.0.3 on 2020-08-18 10:24

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Authorization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unique_number', models.CharField(max_length=64, unique=True, verbose_name='唯一逻辑码')),
                ('appkey', models.CharField(max_length=48, verbose_name='授权appkey')),
                ('use_status', models.CharField(choices=[('enable', '启动'), ('forbidden', '禁用')], default='forbidden', max_length=24, verbose_name='使用状态')),
                ('company_id', models.IntegerField(verbose_name='使用权限的公司')),
                ('remark', models.TextField(verbose_name='备注')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('create_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间')),
            ],
            options={
                'db_table': 'middleground_permission_platform_company',
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unique_number', models.CharField(max_length=64, unique=True, verbose_name='唯一逻辑码')),
                ('name', models.CharField(max_length=32, verbose_name='权限名称')),
                ('description', models.TextField(verbose_name='描述')),
                ('parent_id', models.IntegerField(default=0, verbose_name='上级组织')),
                ('remark', models.TextField(verbose_name='备注')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('create_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间')),
                ('authorization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='permission.Authorization')),
            ],
            options={
                'db_table': 'middleground_permission_organization',
            },
        ),
        migrations.CreateModel(
            name='PlatForm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unique_number', models.CharField(max_length=64, unique=True, verbose_name='唯一逻辑码')),
                ('name', models.CharField(max_length=64, verbose_name='平台名称')),
                ('company_id', models.IntegerField(verbose_name='公司id(平台归属哪家公司)')),
                ('app_type', models.CharField(choices=[('position', '身份权限'), ('person', '个人权限')], max_length=24, verbose_name='授权类型')),
                ('remark', models.TextField(verbose_name='备注')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('create_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间')),
            ],
            options={
                'db_table': 'middleground_permission_platform',
                'unique_together': {('name',)},
            },
        ),
        migrations.CreateModel(
            name='RuleGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unique_number', models.CharField(max_length=64, unique=True, verbose_name='唯一逻辑码')),
                ('name', models.CharField(max_length=32, verbose_name='权限组名称')),
                ('description', models.TextField(verbose_name='描述')),
                ('remark', models.TextField(verbose_name='备注')),
                ('content', models.TextField(verbose_name='权限内容')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('create_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间')),
                ('authorization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='permission.Authorization')),
            ],
            options={
                'db_table': 'middleground_permission_rulegroup',
            },
        ),
        migrations.CreateModel(
            name='Rule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unique_number', models.CharField(max_length=64, unique=True, verbose_name='唯一逻辑码')),
                ('name', models.CharField(max_length=32, verbose_name='权限名称')),
                ('description', models.TextField(verbose_name='描述')),
                ('code', models.CharField(max_length=128, verbose_name='权限编码')),
                ('parent_id', models.IntegerField(default=0, verbose_name='上级权限')),
                ('remark', models.TextField(verbose_name='备注')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('create_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间')),
                ('platform', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='permission.PlatForm')),
            ],
            options={
                'db_table': 'middleground_permission_rule',
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unique_number', models.CharField(max_length=64, unique=True, verbose_name='唯一逻辑码')),
                ('name', models.CharField(max_length=32, verbose_name='身份名称')),
                ('parent_id', models.IntegerField(default=0, verbose_name='上级身份')),
                ('description', models.TextField(verbose_name='描述')),
                ('remark', models.TextField(verbose_name='备注')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('create_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间')),
                ('authorization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='permission.Authorization')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='permission.Organization')),
                ('rule_group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='permission.RuleGroup')),
            ],
            options={
                'db_table': 'middleground_permission_position',
            },
        ),
        migrations.CreateModel(
            name='PersonGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unique_number', models.CharField(max_length=64, unique=True, verbose_name='唯一逻辑码')),
                ('name', models.CharField(max_length=32, verbose_name='权限组名称')),
                ('description', models.TextField(verbose_name='描述')),
                ('remark', models.TextField(verbose_name='备注')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('create_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间')),
                ('authorization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='permission.Authorization')),
                ('rule_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='permission.RuleGroup')),
            ],
            options={
                'db_table': 'middleground_permission_person_group',
            },
        ),
        migrations.AddField(
            model_name='authorization',
            name='platform',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='permission.PlatForm'),
        ),
        migrations.CreateModel(
            name='PositionPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unique_number', models.CharField(max_length=64, unique=True, verbose_name='唯一逻辑码')),
                ('person_id', models.IntegerField(verbose_name='用户id')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('create_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间')),
                ('authorization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='permission.Authorization')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='permission.Organization')),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='permission.Position')),
            ],
            options={
                'db_table': 'middleground_permission_position_permission',
                'unique_together': {('person_id', 'authorization')},
            },
        ),
        migrations.CreateModel(
            name='PersonPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unique_number', models.CharField(max_length=64, unique=True, verbose_name='唯一逻辑码')),
                ('person_id', models.IntegerField(verbose_name='用户id')),
                ('create_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间')),
                ('authorization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='permission.Authorization')),
                ('person_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='permission.PersonGroup')),
            ],
            options={
                'db_table': 'middleground_permission_person_permission',
                'unique_together': {('person_id', 'authorization')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='authorization',
            unique_together={('company_id', 'platform')},
        ),
    ]
